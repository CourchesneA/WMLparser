function printASTIndent(node, tabVal){
	if(typeof tabVal === 'undefined'){
		tabVal = 0;
	}
	var tabs = "";
	for(var i = 0; i < tabVal; i++){
		tabs= tabs.concat("	");
	}
	var result = "";
	for(var param in node){
		if (node.hasOwnProperty(param)){
			var curNode;
			if(typeof node[param] === 'object' && node[param] !== null){
				curNode ='\n' + printASTIndent(node[param], tabVal+1);
				result +=tabs + param +":" + curNode;

			}
			else{
				curNode = node[param];
				result +=tabs + param +":" + curNode + '\n';
			}
		}
	}
	return result;
}


//var teststr = "outer 1 {{invoc {{ invoc2 | param2 }}| param }} outer2";
var teststr = "{:definition|arg1 {{{you}}} :}";
>>>>>>> cee6dc78f8c96736655e0d2c876a712a93f6aa69
var done = parse(teststr);
console.log(printASTIndent(done, 4));


//TODO investigate line feed and trim

//-----------------Question 4---------------------

function printAST(a){
    return printOuter(a);
}

function printOuter(a){
    var rvalue = "";
    for(var rule in a){
        if(!eval(rule)){
            continue;       //property is null, next property
        }
        switch(rule){
            case 'INNERTEXT':
                rvalue+=eval(rule);
                break;

            case 'templateinvoc':
                rvalue+=printTInvoc(rule);
                break;

            case 'templatedef':
                rvalue+=printTDef(rule);
                break;

            case 'next':
                rvalue+=printOuter(rule);
        }
    }
    return rvalue;
}

function printTInvoc(a){
     var rvalue = "";
    for(var rule in a){
        if(!eval(rule)){
            continue;       //property is null, next property
        }
        switch(rule){
            case 'itext':
                rvalue+=printIText(rule);
                break;

            case 'targs':
                rvalue+=printTArgs(rule);
                break;
        }
    }
    return "{{"+rvalue+"}}";
}
function printTDef(a){
     var rvalue = "";
    for(var rule in a){
        if(!eval(rule)){
            continue;       //property is null, next property
        }
        switch(rule){
            case 'INNERTEXT':
                rvalue+=eval(rule);
                break;

            case 'templateinvoc':
                rvalue+=printTInvoc(rule);
                break;

            case 'templatedef':
                rvalue+=printTDef(rule);
                break;

            case 'next':
                rvalue+=printOuter(rule);
        }
    }
    return rvalue;
}

function printIText(a){
 name : "itext",
        INNERTEXT : null,
        templateinvocation : null,
        templatedef : null,
        tparam : null,
        next : null

    var rvalue = "";
    for(var rule in a){
        if(!eval(rule)){
            continue;       //property is null, next property
        }
        switch(rule){
            case 'INNERTEXT':
                rvalue+=eval(rule);
                break;

            case 'templateinvocation':
                rvalue+= printTInvoc(rule);
                break;

            case 'templatedef':
                rvalue+= printTDef(rule);
                break;

            case 'tparam':
                rvalue+= printTParam(rule);
                break;

            case 'next':
                rvalue+= printIText(rule);
                break;
        }
    }
    return "?"+rvalue;
}

function printTParam(a){
    
}

function printTArgs(a){
    var rvalue = "";
    for(var rule in a){
        if(!eval(rule)){
            continue;       //property is null, next property
        }
        switch(rule){
            case 'itext':
                rvalue+=printIText(rule);
                break;

            case 'next':
                rvalue+=printTArgs(rule);
                break;
        }
    }
    return "|"+rvalue;
}




